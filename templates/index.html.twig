{% extends 'base.html.twig' %}

{% block title %}Eventos sísmicos{% endblock %}

{% block body %}
    <script>
        function enviaDatos (id, fecha, mag) {
            var theForm, newInput1, newInput2, newInput3;
            // Start by creating a <form>
            theForm = document.createElement('form');
            theForm.action = '{{ path('app_file_manager_list') }}';
            theForm.method = 'post';
            // Next create the <input>s in the form and give them names and values
            newInput1 = document.createElement('input');
            newInput1.type = 'hidden';
            newInput1.name = 'id';
            newInput1.value = id;
            newInput2 = document.createElement('input');
            newInput2.type = 'hidden';
            newInput2.name = 'fecha';
            newInput2.value = fecha;
            newInput3 = document.createElement('input');
            newInput3.type = 'hidden';
            newInput3.name = 'mag';
            newInput3.value = mag;


            // Now put everything together...
            theForm.appendChild(newInput1);
            theForm.appendChild(newInput2);
            theForm.appendChild(newInput3);

            // ...and it to the DOM...
            document.getElementById('hidden_form_container').appendChild(theForm);
            // ...and submit it
            theForm.submit();
        }

    </script>
    <div class="container mt-5">
        <h1 class="mb-3">Eventos sísmicos con Archivos Generados</h1>

        {# Flashes del sistema #}
        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }}">{{ message }}</div>
            {% endfor %}
        {% endfor %}



            <input type="hidden" name="_token" value="{{ csrf_token('descargar_evento') }}">
            <input type="hidden" id="idEventoSeleccionado" name="idEvento">

            <table class="table table-striped table-hover table-condensed " id="eventosTable">
                <thead>
                <tr>

                    <th data-sort="fecha">Fecha del evento</th>
                    <th>Magnitud (Mw)</th>
                    <th>Profundidad (km)</th>
                    <th data-sort="aceleracion">Aceleración Máx. cm/s&sup2 (lugar)</th>
                    <th> Ver archivos</th>
                </tr>
                </thead>
                <tbody>
                {% for e in eventos %}
                    <tr class="fila-seleccionable"
                        data-id="{{ e.idEvento }}"
                        role="button">
                        {# Use data-sort-value para ordenar correctamente #}
                        <td data-sort-value="{{ e.fechaEvento ? e.fechaEvento|date('U') : '' }}">
                            {{ e.fechaEvento ? e.fechaEvento|date('Y-m-d H:i:s') : '—' }}
                        </td>
                        <td>
                            {{ e.magnitudEvento is not null ? e.magnitudEvento|number_format(1, '.', ',') : '—' }}
                        </td>
                        <td data-sort-value="{{ e.profundidadEvento is not null ? e.profundidadEvento : '' }}">
                            {{ e.profundidadEvento is not null ? e.profundidadEvento|number_format(1, '.', ',') : '—' }}
                        </td>
                        <td data-sort-value="{{ e.aceleracionEvento is not null ? e.aceleracionEvento : '' }}">
                            {{ e.aceleracionEvento is not null ? e.aceleracionEvento|number_format(2, '.', ',') : '—'  }} -- ( {{ e.nombre }} )
                        </td>
                        <td> <button  class="btn btn-primary" id="btnDescargar"
                                     onclick="enviaDatos('{{ e.idEvento }}','{{ e.fechaEvento }}','{{ e.magnitudEvento }}')">
                                Archivos .Lis
                            </button>
                        </td>
                    </tr>
                {% else %}
                    <tr><td colspan="5" class="text-muted">No hay eventos para mostrar.</td></tr>
                {% endfor %}
                </tbody>
            </table>


    </div>

    <div id="hidden_form_container" style="display:none;"></div>
{% endblock %}

{% block scriptspie %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const tabla = new DataTable('#eventosTable', {
                // Comportamiento general
                paging: true,
                ordering: true,
                order: [[0, 'desc']],
                lengthMenu: [15, 30, 60],
                pageLength: 15,
                retrieve: true, // si ya existe una instancia, la reutiliza

                // Centrados (todas las columnas)
                columnDefs: [
                    { targets: '_all', className: 'dt-head-center dt-body-center' }
                ],

                // Disposición moderna del layout (v2)
                layout: {
                    topStart: [
                        'pageLength'

                    ],
                    topEnd: 'search',
                    bottomStart: 'info',
                    bottomEnd: 'paging'
                },

                // Localización en español
                language: {
                    processing:   'Procesando...',
                    search:       'Buscar:',
                    lengthMenu:   'Mostrar _MENU_ registros',
                    info:         'Mostrando _START_ a _END_ de _TOTAL_ registros',
                    infoEmpty:    'Mostrando 0 a 0 de 0 registros',
                    infoFiltered: '(filtrado de _MAX_ registros en total)',
                    loadingRecords: 'Cargando...',
                    zeroRecords:  'No se encontraron resultados',
                    emptyTable:   'No hay datos disponibles en la tabla',
                    paginate: {
                        first:    'Primero',
                        previous: 'Anterior',
                        next:     'Siguiente',
                        last:     'Último'
                    },
                    aria: {
                        sortAscending:  ': activar para ordenar la columna ascendente',
                        sortDescending: ': activar para ordenar la columna descendente'
                    },
                    buttons: {
                        pageLength: {
                            _: 'Mostrar %d filas',
                            '-1': 'Mostrar todas'
                        }
                    }
                }
            });
        });
    </script>

{% endblock %}