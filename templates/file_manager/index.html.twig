{% extends 'base.html.twig' %}

{% block title %}Gestor de Archivos{% endblock %}

{% block body %}
    <div class="container mt-5">
        <h1>Gestor de Archivos</h1>
        <p class="text-muted">Ubicación actual: /{{ current_path }}</p>

        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="alert alert-{{ label }}">
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}

        <form action="{{ path('app_file_manager_download') }}" method="post">
            {# Campo oculto para enviar la ruta actual al descargar #}
            <input type="hidden" name="current_path" value="{{ current_path }}">

            <table class="table table-striped table-hover" id="filesTable">
                <thead>
                <tr>
                    <th><input type="checkbox" id="selectAll"></th>
                    <th data-sort="name">Nombre</th>
                    <th data-sort="size">Tamaño</th>
                    <th data-sort="modified">Última Modificación</th>
                </tr>
                </thead>
                <tbody>
                {# Enlace para subir de nivel si no estamos en la raíz #}
                {% if current_path %}
                    <tr>
                        <td></td>
                        <td colspan="3">
                            <a href="{{ path('app_file_manager_list', {'path': parent_path == '.' ? '' : parent_path}) }}">
                                ⬆️ Subir un nivel...
                            </a>
                        </td>
                    </tr>
                {% endif %}

                {# Listar directorios #}
                {% for dir in directories %}
                    <tr>
                        <td></td>
                        <td colspan="3">
                            <a href="{{ path('app_file_manager_list', {'path': current_path ? current_path ~ '/' ~ dir.filename : dir.filename}) }}">
                                📁 {{ dir.filename }}
                            </a>
                        </td>
                    </tr>
                {% endfor %}

                {# Listar archivos #}
                {% for file in files %}
                    <tr>
                        <td><input type="checkbox" name="files[]" value="{{ file.name }}"></td>
                        <td>📄 {{ file.name }}</td>
                        <td data-sort-value="{{ file.size }}">{{ file.size|number_format(0, '.', ',') }} bytes</td>
                        <td data-sort-value="{{ file.modified }}">{{ file.modified|date('d/m/Y H:i:s') }}</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
            <button type="submit" class="btn btn-primary">Descargar Seleccionados</button>
        </form>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {# El mismo JavaScript de antes funciona sin cambios #}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const getCellValue = (tr, idx) => {
                const td = tr.children[idx];
                // Ignorar filas de navegación y carpetas en el ordenamiento
                if (!td || td.getAttribute('colspan')) return null;
                return td.dataset.sortValue || td.innerText || td.textContent;
            };

            const comparer = (idx, asc) => (a, b) => {
                const v1 = getCellValue(asc ? a : b, idx);
                const v2 = getCellValue(asc ? b : a, idx);
                // Si uno de los valores no es para ordenar (ej. carpetas), no los muevas
                if(v1 === null || v2 === null) return 0;

                return v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2);
            };

            document.querySelectorAll('#filesTable th[data-sort]').forEach(th => th.addEventListener('click', (() => {
                const table = th.closest('table');
                const tbody = table.querySelector('tbody');
                Array.from(tbody.querySelectorAll('tr'))
                    .filter(tr => tr.querySelectorAll('td').length > 1) // Ordenar solo filas de archivos
                    .sort(comparer(Array.from(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                    .forEach(tr => tbody.appendChild(tr) );
            })));

            document.getElementById('selectAll').addEventListener('click', function(event) {
                const checkboxes = document.querySelectorAll('input[name="files[]"]');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = event.target.checked;
                });
            });
        });
    </script>
{% endblock %}